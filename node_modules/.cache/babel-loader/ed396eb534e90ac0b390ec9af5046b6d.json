{"ast":null,"code":"import _slicedToArray from\"C:\\\\React_Projects\\\\ddroidd_internship\\\\webapp\\\\app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";//Component that allows the user to register into ddroidd Winter Internship\n//Contains NameField , AddressField , SubAddressField , ContactField and ReCAPTCHA as child components\nimport React from'react';import FormTitle from'./FormTitle';import NameSection from'./NameSection/NameSection';import AdressSection from'./AdressSection/AdressSection';import ContactSection from'./ContactSection/ContactSection';import ReCAPTCHA from\"react-google-recaptcha\";import{useHistory}from'react-router-dom';import{useState}from'react';import{getUserInput,validateName,validateAddress,validateContact}from'./userValidation';import{getStateObject}from'./constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CAPTCHA_API_KEY=process.env.REACT_APP_CAPTCHA_API_KEY;var recaptchaRef=/*#__PURE__*/React.createRef();var InfoForm=function InfoForm(){var routing=useHistory();//state object for the form validation\nvar _useState=useState(getStateObject(null)),_useState2=_slicedToArray(_useState,2),validInput=_useState2[0],setValidInput=_useState2[1];/**\r\n     * Validates user input and redirects him if the data is valid or displays error messages else\r\n     */var validateUserInput=function validateUserInput(){var _getUserInput=getUserInput(),firstName=_getUserInput.firstName,lastName=_getUserInput.lastName,firstAddress=_getUserInput.firstAddress,secondAddress=_getUserInput.secondAddress,city=_getUserInput.city,state=_getUserInput.state,zipCode=_getUserInput.zipCode,phoneNumber=_getUserInput.phoneNumber,mailAddress=_getUserInput.mailAddress;var validInput=getStateObject(true);//validating each field in the form\nvalidateName(firstName,lastName,validInput);validateAddress(firstAddress,secondAddress,city,state,zipCode,validInput);validateContact(phoneNumber,mailAddress,validInput);//validating the captcha check\nvar recaptchaValue=recaptchaRef.current.getValue();if(!(recaptchaValue.length>0)){validInput.validCaptcha=false;}//check if the user data is valid \nvar validUser=true;for(var _i=0,_Object$entries=Object.entries(validInput);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),_=_Object$entries$_i[0],value=_Object$entries$_i[1];if(value!==true){validUser=false;}}if(validUser){//redirecting user to Submit page\nrouting.push({pathname:'/submit',//saving user data input for further processing\nstate:{firstName:firstName,lastName:lastName,firstAddress:firstAddress,secondAddress:secondAddress,city:city,state:state,zipCode:zipCode,phoneNumber:phoneNumber,mailAddress:mailAddress}});}setValidInput(validInput);};return/*#__PURE__*/_jsx(\"div\",{className:\"w-2/3 screen-l:h-form-l h-form-2xl relative inset-x-center-section bg-athens-gray\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-areas-form-layout bg-athens-gray h-full w-2/3 relative inset-x-center-section\",children:[/*#__PURE__*/_jsx(FormTitle,{}),/*#__PURE__*/_jsx(NameSection,{validFirstName:validInput.validFirstName,validLastName:validInput.validLastName}),/*#__PURE__*/_jsx(AdressSection,{validAddrLine1:validInput.validAddrLine1,validAddrLine2:validInput.validAddrLine2,validCity:validInput.validCity,validState:validInput.validState,validZipCode:validInput.validZipCode}),/*#__PURE__*/_jsx(ContactSection,{validPhone:validInput.validPhone,validMail:validInput.validMail}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-in-submit screen-l:mb-28 screen-xl:mb-40 screen-2xl:mb-52\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center px-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center h-1/2 w-1/2\",children:[/*#__PURE__*/_jsx(ReCAPTCHA,{sitekey:\"\".concat(CAPTCHA_API_KEY),ref:recaptchaRef,theme:\"dark\"}),validInput.validCaptcha===false&&/*#__PURE__*/_jsx(\"h1\",{className:\"w-full h-1/3 mt-4 font-extrabold text-xl text-red italic\",children:\"Please check the captcha\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"h-1/4 w-1/3 bg-school-bus-yellow border animation ease-in-out duration-500 transform hover:scale-110 shadow-button-shadow\",onClick:function onClick(){validateUserInput();},children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-prussian-blue\",children:\"Join Us\"})})]})})]})});};export default InfoForm;","map":{"version":3,"sources":["C:/React_Projects/ddroidd_internship/webapp/app/src/Form/InfoForm.jsx"],"names":["React","FormTitle","NameSection","AdressSection","ContactSection","ReCAPTCHA","useHistory","useState","getUserInput","validateName","validateAddress","validateContact","getStateObject","CAPTCHA_API_KEY","process","env","REACT_APP_CAPTCHA_API_KEY","recaptchaRef","createRef","InfoForm","routing","validInput","setValidInput","validateUserInput","firstName","lastName","firstAddress","secondAddress","city","state","zipCode","phoneNumber","mailAddress","recaptchaValue","current","getValue","length","validCaptcha","validUser","Object","entries","_","value","push","pathname","validFirstName","validLastName","validAddrLine1","validAddrLine2","validCity","validState","validZipCode","validPhone","validMail"],"mappings":"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","sourcesContent":["//Component that allows the user to register into ddroidd Winter Internship\r\n//Contains NameField , AddressField , SubAddressField , ContactField and ReCAPTCHA as child components\r\n\r\nimport React from 'react'\r\nimport FormTitle from './FormTitle';\r\nimport NameSection from './NameSection/NameSection';\r\nimport AdressSection from './AdressSection/AdressSection';\r\nimport ContactSection from './ContactSection/ContactSection';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { getUserInput , validateName , validateAddress , validateContact } from './userValidation';\r\nimport { getStateObject } from './constants';\r\n\r\nconst CAPTCHA_API_KEY = process.env.REACT_APP_CAPTCHA_API_KEY;\r\nconst recaptchaRef = React.createRef();\r\n\r\nconst InfoForm = () => {\r\n\r\n    let routing = useHistory();\r\n\r\n    //state object for the form validation\r\n    const [validInput , setValidInput] = useState(getStateObject(null));\r\n\r\n    /**\r\n     * Validates user input and redirects him if the data is valid or displays error messages else\r\n     */\r\n    const validateUserInput = () => {\r\n        const {firstName , lastName , firstAddress , secondAddress , city , state , zipCode , phoneNumber , mailAddress} = getUserInput();\r\n        var validInput = getStateObject(true);\r\n\r\n        //validating each field in the form\r\n        validateName(firstName , lastName , validInput);\r\n        validateAddress(firstAddress , secondAddress , city , state , zipCode , validInput);\r\n        validateContact(phoneNumber , mailAddress , validInput);\r\n\r\n        //validating the captcha check\r\n        const recaptchaValue = recaptchaRef.current.getValue();\r\n        if(!(recaptchaValue.length > 0)){\r\n            validInput.validCaptcha = false;\r\n        }\r\n\r\n        //check if the user data is valid \r\n        var validUser = true;\r\n        for(const [_ , value] of Object.entries(validInput)){\r\n            if(value !== true){\r\n                validUser = false;\r\n            }\r\n        }\r\n        if(validUser){\r\n            //redirecting user to Submit page\r\n            routing.push({\r\n                pathname : '/submit',\r\n                //saving user data input for further processing\r\n                state : {\r\n                    firstName : firstName ,\r\n                    lastName : lastName ,\r\n                    firstAddress : firstAddress ,\r\n                    secondAddress : secondAddress , \r\n                    city : city , \r\n                    state : state ,\r\n                    zipCode : zipCode ,\r\n                    phoneNumber : phoneNumber , \r\n                    mailAddress : mailAddress\r\n                 }\r\n            });\r\n        }\r\n        setValidInput(validInput);\r\n    }\r\n\r\n    return(\r\n        <div className='w-2/3 screen-l:h-form-l h-form-2xl relative inset-x-center-section bg-athens-gray'>\r\n            <div className='grid grid-areas-form-layout bg-athens-gray h-full w-2/3 relative inset-x-center-section'>\r\n                <FormTitle />\r\n                <NameSection validFirstName = {validInput.validFirstName} validLastName = {validInput.validLastName}/>\r\n                <AdressSection \r\n                    validAddrLine1 = {validInput.validAddrLine1}\r\n                    validAddrLine2 = {validInput.validAddrLine2}\r\n                    validCity = {validInput.validCity}\r\n                    validState = {validInput.validState}\r\n                    validZipCode = {validInput.validZipCode}\r\n                />\r\n                <ContactSection validPhone = {validInput.validPhone} validMail = {validInput.validMail} />\r\n                {/* Form submit section */}\r\n                <div className='grid grid-in-submit screen-l:mb-28 screen-xl:mb-40 screen-2xl:mb-52'>\r\n                    <div className='flex justify-between items-center px-5'>\r\n                        <div className='flex flex-col items-center justify-center h-1/2 w-1/2'>\r\n                            <ReCAPTCHA \r\n                                sitekey={`${CAPTCHA_API_KEY}`}\r\n                                ref={recaptchaRef}\r\n                                theme='dark'\r\n                            />\r\n                            {validInput.validCaptcha === false && \r\n                                <h1 className='w-full h-1/3 mt-4 font-extrabold text-xl text-red italic'>\r\n                                    Please check the captcha\r\n                                </h1>\r\n                            }\r\n                        </div>\r\n                        <button \r\n                            className='h-1/4 w-1/3 bg-school-bus-yellow border animation ease-in-out duration-500 transform hover:scale-110 shadow-button-shadow' \r\n                            onClick = {() => {validateUserInput()}}>\r\n                                <h1 className='text-3xl font-bold text-prussian-blue'>Join Us</h1>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoForm;"]},"metadata":{},"sourceType":"module"}