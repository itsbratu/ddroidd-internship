{"ast":null,"code":"import _slicedToArray from\"C:\\\\React_Projects\\\\ddroidd_internship\\\\webapp\\\\app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React from'react';import NameField from'./NameField';import AddressField from'./AddressField';import ContactField from'./ContactField';import SubAddressField from'./SubAddressField';import ReCAPTCHA from\"react-google-recaptcha\";import{useHistory}from'react-router-dom';import{useState}from'react';import{regexList}from'./constants';import{inputIds}from'./constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CAPTCHA_API_KEY=process.env.REACT_APP_CAPTCHA_API_KEY;var recaptchaRef=/*#__PURE__*/React.createRef();var InfoForm=function InfoForm(){var routing=useHistory();var _useState=useState({validFirstName:null,validLastName:null,validAddrLine1:null,validAddrLine2:null,validCity:null,validState:null,validZipCode:null,validPhone:null,validMail:null,validCaptcha:null}),_useState2=_slicedToArray(_useState,2),validInput=_useState2[0],setValidInput=_useState2[1];var getUserInput=function getUserInput(){var userInputs={firstName:\"\",lastName:\"\",firstAddress:\"\",secondAddress:\"\",city:\"\",state:\"\",zipCode:\"\",phoneNumber:\"\",mailAddress:\"\"};inputIds.map(function(currentInputField){userInputs[currentInputField]=document.getElementById(currentInputField).value;});return userInputs;};var validateOnlyLettersInput=function validateOnlyLettersInput(firstName,lastName,city,secondAddress,validInput){var onlyLettersRegex=new RegExp(regexList.onlyLetters);if(!onlyLettersRegex.test(firstName)){validInput.validFirstName=false;}if(!onlyLettersRegex.test(lastName)){validInput.validLastName=false;}if(!onlyLettersRegex.test(city)){validInput.validCity=false;}if(secondAddress.length>0&&!onlyLettersRegex.test(secondAddress)){validInput.validAddrLine2=false;}};var validateUserInput=function validateUserInput(){var _getUserInput=getUserInput(),firstName=_getUserInput.firstName,lastName=_getUserInput.lastName,firstAddress=_getUserInput.firstAddress,secondAddress=_getUserInput.secondAddress,city=_getUserInput.city,state=_getUserInput.state,zipCode=_getUserInput.zipCode,phoneNumber=_getUserInput.phoneNumber,mailAddress=_getUserInput.mailAddress;var validInput={validFirstName:true,validLastName:true,validAddrLine1:true,validAddrLine2:true,validCity:true,validState:true,validZipCode:true,validPhone:true,validMail:true,validCaptcha:true};validateOnlyLettersInput(firstName,lastName,city,secondAddress,validInput);//testing first address line\nvar addressRegex=new RegExp(regexList.address);if(!addressRegex.test(firstAddress)){validInput.validAddrLine1=false;}//testing state\nif(state==='true'){console.log(state);validInput.validState=false;}//testing zip code\nvar zipCodeRegex=new RegExp(regexList.zipCode);if(!zipCodeRegex.test(zipCode)){validInput.validZipCode=false;}//testing phone number\nvar phoneRegex=new RegExp(regexList.phoneNumber);if(!phoneRegex.test(phoneNumber)){validInput.validPhone=false;}//testing mail address\nvar mailRegex=new RegExp(regexList.mailAddress);if(!mailRegex.test(mailAddress)){validInput.validMail=false;}var recaptchaValue=recaptchaRef.current.getValue();if(!(recaptchaValue.length>0)){validInput.validCaptcha=false;}var validUser=true;for(var _i=0,_Object$entries=Object.entries(validInput);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),_=_Object$entries$_i[0],value=_Object$entries$_i[1];if(value!==true){validUser=false;}}if(validUser){routing.push('./submit');}setValidInput(validInput);};return/*#__PURE__*/_jsx(\"div\",{className:\"w-2/3 h-screen relative inset-x-center-section bg-athens-gray\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center w-2/3 h-full relative inset-x-center-section py-20 select-none\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-5xl font-extrabold text-prussian-blue\",children:\"Application Form\"}),/*#__PURE__*/_jsxs(\"form\",{id:\"applicationForm\",className:\"grid grid-areas-form-layout mt-16 pt-5 bg-athens-gray h-full w-full\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-in-name\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-evenly\",children:[/*#__PURE__*/_jsx(NameField,{name:\"First name\",id:\"firstName\",userValidInput:validInput.validFirstName}),/*#__PURE__*/_jsx(NameField,{name:\"Last name\",id:\"lastName\",userValidInput:validInput.validLastName})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-in-address\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col justify-evenly\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center h-1/4 w-full px-5\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-extrabold text-prussian-blue\",children:\"Address\"})}),/*#__PURE__*/_jsx(AddressField,{name:\"Address Line 1\",id:\"firstAddress\",placeholder:\"Street name & number\",mandatory:true,userValidInput:validInput.validAddrLine1}),/*#__PURE__*/_jsx(AddressField,{name:\"Address Line 2\",id:\"secondAddress\",placeholder:\"Suite, apartament\",mandatory:false,userValidInput:validInput.validAddrLine2}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex w-full h-1/4 mt-10\",children:[/*#__PURE__*/_jsx(SubAddressField,{name:\"City\",id:\"city\",userValidInput:validInput.validCity}),/*#__PURE__*/_jsx(SubAddressField,{name:\"State\",id:\"state\",userValidInput:validInput.validState}),/*#__PURE__*/_jsx(SubAddressField,{name:\"Zip code\",id:\"zipCode\",userValidInput:validInput.validZipCode})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full h-1/6 mt-5\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-in-contact bg-athens-gray\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col justify-center h-1/2 w-full px-5\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-extrabold text-prussian-blue\",children:\"Contact information\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex h-1/2 w-full\",children:[/*#__PURE__*/_jsx(ContactField,{name:\"Phone number\",id:\"phoneNumber\",placeholder:\"555-5555\",userValidInput:validInput.validPhone}),/*#__PURE__*/_jsx(ContactField,{name:\"Email address\",id:\"mailAddress\",placeholder:\"john@doe.com\",userValidInput:validInput.validMail})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-in-submit\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center px-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col justify-center h-full w-1/2\",children:[/*#__PURE__*/_jsx(ReCAPTCHA,{sitekey:\"\".concat(CAPTCHA_API_KEY),ref:recaptchaRef,theme:\"dark\"}),validInput.validCaptcha===false&&/*#__PURE__*/_jsx(\"h1\",{className:\"w-full h-1/3 mt-4 font-extrabold text-xl text-red italic\",children:\"Please check the captcha\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"h-1/3 w-1/3 bg-school-bus-yellow border animation ease-in-out duration-500 transform hover:scale-110\",onClick:function onClick(){validateUserInput();},children:/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-prussian-blue\",children:\"Join Us\"})})]})})]})]})});};export default InfoForm;","map":{"version":3,"sources":["C:/React_Projects/ddroidd_internship/webapp/app/src/Form/InfoForm.jsx"],"names":["React","NameField","AddressField","ContactField","SubAddressField","ReCAPTCHA","useHistory","useState","regexList","inputIds","CAPTCHA_API_KEY","process","env","REACT_APP_CAPTCHA_API_KEY","recaptchaRef","createRef","InfoForm","routing","validFirstName","validLastName","validAddrLine1","validAddrLine2","validCity","validState","validZipCode","validPhone","validMail","validCaptcha","validInput","setValidInput","getUserInput","userInputs","firstName","lastName","firstAddress","secondAddress","city","state","zipCode","phoneNumber","mailAddress","map","currentInputField","document","getElementById","value","validateOnlyLettersInput","onlyLettersRegex","RegExp","onlyLetters","test","length","validateUserInput","addressRegex","address","console","log","zipCodeRegex","phoneRegex","mailRegex","recaptchaValue","current","getValue","validUser","Object","entries","_","push"],"mappings":"+IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,OAASC,SAAT,KAA0B,aAA1B,CACA,OAASC,QAAT,KAAyB,aAAzB,C,wFAEA,GAAMC,CAAAA,eAAe,CAAGC,OAAO,CAACC,GAAR,CAAYC,yBAApC,CACA,GAAMC,CAAAA,YAAY,cAAGd,KAAK,CAACe,SAAN,EAArB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAEnB,GAAIC,CAAAA,OAAO,CAAGX,UAAU,EAAxB,CAEA,cAAqCC,QAAQ,CAAC,CAC1CW,cAAc,CAAG,IADyB,CAE1CC,aAAa,CAAG,IAF0B,CAG1CC,cAAc,CAAG,IAHyB,CAI1CC,cAAc,CAAG,IAJyB,CAK1CC,SAAS,CAAG,IAL8B,CAM1CC,UAAU,CAAG,IAN6B,CAO1CC,YAAY,CAAG,IAP2B,CAQ1CC,UAAU,CAAG,IAR6B,CAS1CC,SAAS,CAAG,IAT8B,CAU1CC,YAAY,CAAG,IAV2B,CAAD,CAA7C,wCAAOC,UAAP,eAAoBC,aAApB,eAaA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvB,GAAIC,CAAAA,UAAU,CAAG,CACbC,SAAS,CAAG,EADC,CAEbC,QAAQ,CAAG,EAFE,CAGbC,YAAY,CAAG,EAHF,CAIbC,aAAa,CAAG,EAJH,CAKbC,IAAI,CAAG,EALM,CAMbC,KAAK,CAAG,EANK,CAObC,OAAO,CAAG,EAPG,CAQbC,WAAW,CAAG,EARD,CASbC,WAAW,CAAG,EATD,CAAjB,CAWA/B,QAAQ,CAACgC,GAAT,CAAa,SAACC,iBAAD,CAAuB,CAChCX,UAAU,CAACW,iBAAD,CAAV,CAAgCC,QAAQ,CAACC,cAAT,CAAwBF,iBAAxB,EAA2CG,KAA3E,CACH,CAFD,EAGA,MAAOd,CAAAA,UAAP,CACH,CAhBD,CAkBA,GAAMe,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,CAACd,SAAD,CAAaC,QAAb,CAAwBG,IAAxB,CAA+BD,aAA/B,CAA+CP,UAA/C,CAA8D,CAC3F,GAAMmB,CAAAA,gBAAgB,CAAG,GAAIC,CAAAA,MAAJ,CAAWxC,SAAS,CAACyC,WAArB,CAAzB,CACA,GAAG,CAACF,gBAAgB,CAACG,IAAjB,CAAsBlB,SAAtB,CAAJ,CAAqC,CACjCJ,UAAU,CAACV,cAAX,CAA4B,KAA5B,CACH,CACD,GAAG,CAAC6B,gBAAgB,CAACG,IAAjB,CAAsBjB,QAAtB,CAAJ,CAAoC,CAChCL,UAAU,CAACT,aAAX,CAA2B,KAA3B,CACH,CACD,GAAG,CAAC4B,gBAAgB,CAACG,IAAjB,CAAsBd,IAAtB,CAAJ,CAAgC,CAC5BR,UAAU,CAACN,SAAX,CAAuB,KAAvB,CACH,CACD,GAAGa,aAAa,CAACgB,MAAd,CAAuB,CAAvB,EAA4B,CAACJ,gBAAgB,CAACG,IAAjB,CAAsBf,aAAtB,CAAhC,CAAqE,CACjEP,UAAU,CAACP,cAAX,CAA4B,KAA5B,CACH,CACJ,CAdD,CAgBA,GAAM+B,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC5B,kBAAmHtB,YAAY,EAA/H,CAAOE,SAAP,eAAOA,SAAP,CAAmBC,QAAnB,eAAmBA,QAAnB,CAA8BC,YAA9B,eAA8BA,YAA9B,CAA6CC,aAA7C,eAA6CA,aAA7C,CAA6DC,IAA7D,eAA6DA,IAA7D,CAAoEC,KAApE,eAAoEA,KAApE,CAA4EC,OAA5E,eAA4EA,OAA5E,CAAsFC,WAAtF,eAAsFA,WAAtF,CAAoGC,WAApG,eAAoGA,WAApG,CACA,GAAIZ,CAAAA,UAAU,CAAG,CACbV,cAAc,CAAG,IADJ,CAEbC,aAAa,CAAG,IAFH,CAGbC,cAAc,CAAG,IAHJ,CAIbC,cAAc,CAAG,IAJJ,CAKbC,SAAS,CAAG,IALC,CAMbC,UAAU,CAAG,IANA,CAObC,YAAY,CAAG,IAPF,CAQbC,UAAU,CAAG,IARA,CASbC,SAAS,CAAG,IATC,CAUbC,YAAY,CAAG,IAVF,CAAjB,CAYAmB,wBAAwB,CAACd,SAAD,CAAaC,QAAb,CAAwBG,IAAxB,CAA+BD,aAA/B,CAA+CP,UAA/C,CAAxB,CACA;AACA,GAAMyB,CAAAA,YAAY,CAAG,GAAIL,CAAAA,MAAJ,CAAWxC,SAAS,CAAC8C,OAArB,CAArB,CACA,GAAG,CAACD,YAAY,CAACH,IAAb,CAAkBhB,YAAlB,CAAJ,CAAoC,CAChCN,UAAU,CAACR,cAAX,CAA4B,KAA5B,CACH,CACD;AACA,GAAGiB,KAAK,GAAK,MAAb,CAAoB,CAChBkB,OAAO,CAACC,GAAR,CAAYnB,KAAZ,EACAT,UAAU,CAACL,UAAX,CAAwB,KAAxB,CACH,CACD;AACA,GAAMkC,CAAAA,YAAY,CAAG,GAAIT,CAAAA,MAAJ,CAAWxC,SAAS,CAAC8B,OAArB,CAArB,CACA,GAAG,CAACmB,YAAY,CAACP,IAAb,CAAkBZ,OAAlB,CAAJ,CAA+B,CAC3BV,UAAU,CAACJ,YAAX,CAA0B,KAA1B,CACH,CACD;AACA,GAAMkC,CAAAA,UAAU,CAAG,GAAIV,CAAAA,MAAJ,CAAWxC,SAAS,CAAC+B,WAArB,CAAnB,CACA,GAAG,CAACmB,UAAU,CAACR,IAAX,CAAgBX,WAAhB,CAAJ,CAAiC,CAC7BX,UAAU,CAACH,UAAX,CAAwB,KAAxB,CACH,CACD;AACA,GAAMkC,CAAAA,SAAS,CAAG,GAAIX,CAAAA,MAAJ,CAAWxC,SAAS,CAACgC,WAArB,CAAlB,CACA,GAAG,CAACmB,SAAS,CAACT,IAAV,CAAeV,WAAf,CAAJ,CAAgC,CAC5BZ,UAAU,CAACF,SAAX,CAAuB,KAAvB,CACH,CACD,GAAMkC,CAAAA,cAAc,CAAG9C,YAAY,CAAC+C,OAAb,CAAqBC,QAArB,EAAvB,CACA,GAAG,EAAEF,cAAc,CAACT,MAAf,CAAwB,CAA1B,CAAH,CAAgC,CAC5BvB,UAAU,CAACD,YAAX,CAA0B,KAA1B,CACH,CACD,GAAIoC,CAAAA,SAAS,CAAG,IAAhB,CACA,6BAAyBC,MAAM,CAACC,OAAP,CAAerC,UAAf,CAAzB,gCAAoD,CAAhD,6DAAOsC,CAAP,uBAAWrB,KAAX,uBACA,GAAGA,KAAK,GAAK,IAAb,CAAkB,CACdkB,SAAS,CAAG,KAAZ,CACH,CACJ,CACD,GAAGA,SAAH,CAAa,CACT9C,OAAO,CAACkD,IAAR,CAAa,UAAb,EACH,CACDtC,aAAa,CAACD,UAAD,CAAb,CACH,CAtDD,CAwDA,mBACI,YAAK,SAAS,CAAC,+DAAf,uBACI,aAAK,SAAS,CAAC,2FAAf,wBACI,WAAI,SAAS,CAAC,4CAAd,8BADJ,cAEI,cAAM,EAAE,CAAG,iBAAX,CAA6B,SAAS,CAAC,qEAAvC,wBACI,YAAK,SAAS,CAAC,mBAAf,uBACI,aAAK,SAAS,CAAC,qBAAf,wBACI,KAAC,SAAD,EAAW,IAAI,CAAI,YAAnB,CAAiC,EAAE,CAAI,WAAvC,CAAoD,cAAc,CAAIA,UAAU,CAACV,cAAjF,EADJ,cAEI,KAAC,SAAD,EAAW,IAAI,CAAI,WAAnB,CAAgC,EAAE,CAAI,UAAtC,CAAkD,cAAc,CAAIU,UAAU,CAACT,aAA/E,EAFJ,GADJ,EADJ,cAOI,YAAK,SAAS,CAAC,sBAAf,uBACI,aAAK,SAAS,CAAC,8BAAf,wBACI,YAAK,SAAS,CAAC,qCAAf,uBACI,WAAI,SAAS,CAAC,4CAAd,qBADJ,EADJ,cAII,KAAC,YAAD,EAAc,IAAI,CAAI,gBAAtB,CAAwC,EAAE,CAAI,cAA9C,CAA8D,WAAW,CAAI,sBAA7E,CAAqG,SAAS,CAAI,IAAlH,CAAwH,cAAc,CAAIS,UAAU,CAACR,cAArJ,EAJJ,cAKI,KAAC,YAAD,EAAc,IAAI,CAAI,gBAAtB,CAAwC,EAAE,CAAI,eAA9C,CAA+D,WAAW,CAAI,mBAA9E,CAAmG,SAAS,CAAI,KAAhH,CAAuH,cAAc,CAAIQ,UAAU,CAACP,cAApJ,EALJ,cAMI,aAAK,SAAS,CAAC,yBAAf,wBACI,KAAC,eAAD,EAAiB,IAAI,CAAI,MAAzB,CAAiC,EAAE,CAAI,MAAvC,CAA+C,cAAc,CAAIO,UAAU,CAACN,SAA5E,EADJ,cAEI,KAAC,eAAD,EAAiB,IAAI,CAAI,OAAzB,CAAkC,EAAE,CAAI,OAAxC,CAAiD,cAAc,CAAIM,UAAU,CAACL,UAA9E,EAFJ,cAGI,KAAC,eAAD,EAAiB,IAAI,CAAI,UAAzB,CAAqC,EAAE,CAAI,SAA3C,CAAsD,cAAc,CAAIK,UAAU,CAACJ,YAAnF,EAHJ,GANJ,cAWI,YAAK,SAAS,CAAC,mBAAf,EAXJ,GADJ,EAPJ,cAsBI,aAAK,SAAS,CAAC,qCAAf,wBACI,YAAK,SAAS,CAAC,gDAAf,uBACI,WAAI,SAAS,CAAC,4CAAd,iCADJ,EADJ,cAII,aAAK,SAAS,CAAC,mBAAf,wBACI,KAAC,YAAD,EAAc,IAAI,CAAI,cAAtB,CAAsC,EAAE,CAAI,aAA5C,CAA2D,WAAW,CAAI,UAA1E,CAAsF,cAAc,CAAII,UAAU,CAACH,UAAnH,EADJ,cAEI,KAAC,YAAD,EAAc,IAAI,CAAI,eAAtB,CAAuC,EAAE,CAAI,aAA7C,CAA4D,WAAW,CAAI,cAA3E,CAA2F,cAAc,CAAIG,UAAU,CAACF,SAAxH,EAFJ,GAJJ,GAtBJ,cA+BI,YAAK,SAAS,CAAC,qBAAf,uBACI,aAAK,SAAS,CAAC,wCAAf,wBACI,aAAK,SAAS,CAAC,2CAAf,wBACI,KAAC,SAAD,EACI,OAAO,WAAKhB,eAAL,CADX,CAEI,GAAG,CAAEI,YAFT,CAGI,KAAK,CAAC,MAHV,EADJ,CAMKc,UAAU,CAACD,YAAX,GAA4B,KAA5B,eAAqC,WAAI,SAAS,CAAC,0DAAd,sCAN1C,GADJ,cASI,eAAQ,SAAS,CAAC,sGAAlB,CAAyH,OAAO,CAAI,kBAAM,CAACyB,iBAAiB,GAAG,CAA/J,uBACI,WAAI,SAAS,CAAC,uCAAd,qBADJ,EATJ,GADJ,EA/BJ,GAFJ,GADJ,EADJ,CAsDH,CAjKD,CAmKA,cAAepC,CAAAA,QAAf","sourcesContent":["import React from 'react'\r\nimport NameField from './NameField';\r\nimport AddressField from './AddressField';\r\nimport ContactField from './ContactField';\r\nimport SubAddressField from './SubAddressField';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { regexList } from './constants';\r\nimport { inputIds } from './constants';\r\n\r\nconst CAPTCHA_API_KEY = process.env.REACT_APP_CAPTCHA_API_KEY;\r\nconst recaptchaRef = React.createRef();\r\n\r\nconst InfoForm = () => {\r\n\r\n    let routing = useHistory();\r\n\r\n    const [validInput , setValidInput] = useState({\r\n        validFirstName : null , \r\n        validLastName : null , \r\n        validAddrLine1 : null,\r\n        validAddrLine2 : null,\r\n        validCity : null,\r\n        validState : null,\r\n        validZipCode : null,\r\n        validPhone : null,\r\n        validMail : null,\r\n        validCaptcha : null\r\n    });\r\n\r\n    const getUserInput = () => {\r\n        var userInputs = {\r\n            firstName : \"\" , \r\n            lastName : \"\" , \r\n            firstAddress : \"\" , \r\n            secondAddress : \"\" ,\r\n            city : \"\" ,\r\n            state : \"\" ,\r\n            zipCode : \"\" ,\r\n            phoneNumber : \"\" ,\r\n            mailAddress : \"\" ,\r\n        };\r\n        inputIds.map((currentInputField) => {\r\n            userInputs[currentInputField] = document.getElementById(currentInputField).value;\r\n        });\r\n        return userInputs;\r\n    }    \r\n\r\n    const validateOnlyLettersInput = (firstName , lastName , city , secondAddress , validInput) => {\r\n        const onlyLettersRegex = new RegExp(regexList.onlyLetters);\r\n        if(!onlyLettersRegex.test(firstName)){\r\n            validInput.validFirstName = false;\r\n        }\r\n        if(!onlyLettersRegex.test(lastName)){\r\n            validInput.validLastName = false;\r\n        }\r\n        if(!onlyLettersRegex.test(city)){\r\n            validInput.validCity = false;\r\n        }\r\n        if(secondAddress.length > 0 && !onlyLettersRegex.test(secondAddress)){\r\n            validInput.validAddrLine2 = false;\r\n        }\r\n    }\r\n\r\n    const validateUserInput = () => {\r\n        const {firstName , lastName , firstAddress , secondAddress , city , state , zipCode , phoneNumber , mailAddress} = getUserInput();\r\n        var validInput = {\r\n            validFirstName : true ,\r\n            validLastName : true ,\r\n            validAddrLine1 : true ,\r\n            validAddrLine2 : true ,\r\n            validCity : true ,\r\n            validState : true ,\r\n            validZipCode : true ,\r\n            validPhone : true ,\r\n            validMail : true ,\r\n            validCaptcha : true\r\n        }\r\n        validateOnlyLettersInput(firstName , lastName , city , secondAddress , validInput);\r\n        //testing first address line\r\n        const addressRegex = new RegExp(regexList.address);\r\n        if(!addressRegex.test(firstAddress)){\r\n            validInput.validAddrLine1 = false;\r\n        }\r\n        //testing state\r\n        if(state === 'true'){\r\n            console.log(state);\r\n            validInput.validState = false;\r\n        }\r\n        //testing zip code\r\n        const zipCodeRegex = new RegExp(regexList.zipCode);\r\n        if(!zipCodeRegex.test(zipCode)){\r\n            validInput.validZipCode = false;\r\n        }\r\n        //testing phone number\r\n        const phoneRegex = new RegExp(regexList.phoneNumber);\r\n        if(!phoneRegex.test(phoneNumber)){\r\n            validInput.validPhone = false;\r\n        }\r\n        //testing mail address\r\n        const mailRegex = new RegExp(regexList.mailAddress);\r\n        if(!mailRegex.test(mailAddress)){\r\n            validInput.validMail = false;\r\n        }\r\n        const recaptchaValue = recaptchaRef.current.getValue();\r\n        if(!(recaptchaValue.length > 0)){\r\n            validInput.validCaptcha = false;\r\n        }\r\n        var validUser = true;\r\n        for(const [_ , value] of Object.entries(validInput)){\r\n            if(value !== true){\r\n                validUser = false;\r\n            }\r\n        }\r\n        if(validUser){\r\n            routing.push('./submit');\r\n        }\r\n        setValidInput(validInput);\r\n    }\r\n\r\n    return(\r\n        <div className='w-2/3 h-screen relative inset-x-center-section bg-athens-gray'>\r\n            <div className='flex flex-col items-center w-2/3 h-full relative inset-x-center-section py-20 select-none'>\r\n                <h1 className='text-5xl font-extrabold text-prussian-blue'>Application Form</h1>\r\n                <form id = \"applicationForm\" className='grid grid-areas-form-layout mt-16 pt-5 bg-athens-gray h-full w-full'>\r\n                    <div className='grid grid-in-name'>\r\n                        <div className='flex justify-evenly'>\r\n                            <NameField name = {\"First name\"} id = {\"firstName\"} userValidInput = {validInput.validFirstName}/>\r\n                            <NameField name = {\"Last name\"} id = {\"lastName\"} userValidInput = {validInput.validLastName}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-in-address'>\r\n                        <div className='flex flex-col justify-evenly'>\r\n                            <div className='flex items-center h-1/4 w-full px-5'>\r\n                                <h1 className='text-3xl font-extrabold text-prussian-blue'>Address</h1>\r\n                            </div>\r\n                            <AddressField name = {\"Address Line 1\"} id = {\"firstAddress\"} placeholder = {\"Street name & number\"} mandatory = {true} userValidInput = {validInput.validAddrLine1}/>\r\n                            <AddressField name = {\"Address Line 2\"} id = {\"secondAddress\"} placeholder = {\"Suite, apartament\"} mandatory = {false} userValidInput = {validInput.validAddrLine2}/>\r\n                            <div className='flex w-full h-1/4 mt-10'>\r\n                                <SubAddressField name = {\"City\"} id = {\"city\"} userValidInput = {validInput.validCity}/>\r\n                                <SubAddressField name = {\"State\"} id = {\"state\"} userValidInput = {validInput.validState}/>\r\n                                <SubAddressField name = {\"Zip code\"} id = {\"zipCode\"} userValidInput = {validInput.validZipCode}/>\r\n                            </div>\r\n                            <div className='w-full h-1/6 mt-5'></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-in-contact bg-athens-gray'>\r\n                        <div className='flex flex-col justify-center h-1/2 w-full px-5'>\r\n                            <h1 className='text-3xl font-extrabold text-prussian-blue'>Contact information</h1>\r\n                        </div>\r\n                        <div className='flex h-1/2 w-full'>\r\n                            <ContactField name = {\"Phone number\"} id = {\"phoneNumber\"} placeholder = {\"555-5555\"} userValidInput = {validInput.validPhone}/>\r\n                            <ContactField name = {\"Email address\"} id = {\"mailAddress\"} placeholder = {\"john@doe.com\"} userValidInput = {validInput.validMail}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-in-submit'>\r\n                        <div className='flex justify-between items-center px-5'>\r\n                            <div className='flex flex-col justify-center h-full w-1/2'>\r\n                                <ReCAPTCHA \r\n                                    sitekey={`${CAPTCHA_API_KEY}`}\r\n                                    ref={recaptchaRef}\r\n                                    theme='dark'\r\n                                />\r\n                                {validInput.validCaptcha === false && <h1 className='w-full h-1/3 mt-4 font-extrabold text-xl text-red italic'>Please check the captcha</h1>}\r\n                            </div>\r\n                            <button className='h-1/3 w-1/3 bg-school-bus-yellow border animation ease-in-out duration-500 transform hover:scale-110' onClick = {() => {validateUserInput()}}>\r\n                                <h1 className='text-3xl font-bold text-prussian-blue'>Join Us</h1>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoForm;"]},"metadata":{},"sourceType":"module"}