{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_Projects\\\\ddroidd_internship\\\\webapp\\\\app\\\\src\\\\Form\\\\InfoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NameField from './NameField';\nimport AddressField from './AddressField';\nimport ContactField from './ContactField';\nimport SubAddressField from './SubAddressField';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport { regexList } from './constants';\nimport { inputIds } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CAPTCHA_API_KEY = process.env.REACT_APP_CAPTCHA_API_KEY;\nconst recaptchaRef = /*#__PURE__*/React.createRef();\n\nconst InfoForm = () => {\n  _s();\n\n  let routing = useHistory();\n  const [validInput, setValidInput] = useState({\n    validFirstName: null,\n    validLastName: null,\n    validAddrLine1: null,\n    validAddrLine2: null,\n    validCity: null,\n    validState: null,\n    validZipCode: null,\n    validPhone: null,\n    validMail: null,\n    validCaptcha: null\n  });\n\n  const getUserInput = () => {\n    var userInputs = {\n      firstName: \"\",\n      lastName: \"\",\n      firstAddress: \"\",\n      secondAddress: \"\",\n      city: \"\",\n      state: \"\",\n      zipCode: \"\",\n      phoneNumber: \"\",\n      mailAddress: \"\"\n    };\n    inputIds.map(currentInputField => {\n      userInputs[currentInputField] = document.getElementById(currentInputField).value;\n    });\n    return userInputs;\n  };\n\n  const validateOnlyLettersInput = (firstName, lastName, city, secondAddress, validInput) => {\n    const onlyLettersRegex = new RegExp(regexList.onlyLetters);\n\n    if (!onlyLettersRegex.test(firstName)) {\n      validInput.validFirstName = false;\n    }\n\n    if (!onlyLettersRegex.test(lastName)) {\n      validInput.validLastName = false;\n    }\n\n    if (!onlyLettersRegex.test(city)) {\n      validInput.validCity = false;\n    }\n\n    if (secondAddress.length > 0 && !onlyLettersRegex.test(secondAddress)) {\n      validInput.validAddrLine2 = false;\n    }\n  };\n\n  const validateUserInput = () => {\n    const {\n      firstName,\n      lastName,\n      firstAddress,\n      secondAddress,\n      city,\n      state,\n      zipCode,\n      phoneNumber,\n      mailAddress\n    } = getUserInput();\n    var validInput = {\n      validFirstName: true,\n      validLastName: true,\n      validAddrLine1: true,\n      validAddrLine2: true,\n      validCity: true,\n      validState: true,\n      validZipCode: true,\n      validPhone: true,\n      validMail: true,\n      validCaptcha: true\n    };\n    validateOnlyLettersInput(firstName, lastName, city, secondAddress, validInput); //testing first address line\n\n    const addressRegex = new RegExp(regexList.address);\n\n    if (!addressRegex.test(firstAddress)) {\n      validInput.validAddrLine1 = false;\n    } //testing state\n\n\n    if (state === 'true') {\n      console.log(state);\n      validInput.validState = false;\n    } //testing zip code\n\n\n    const zipCodeRegex = new RegExp(regexList.zipCode);\n\n    if (!zipCodeRegex.test(zipCode)) {\n      validInput.validZipCode = false;\n    } //testing phone number\n\n\n    const phoneRegex = new RegExp(regexList.phoneNumber);\n\n    if (!phoneRegex.test(phoneNumber)) {\n      validInput.validPhone = false;\n    } //testing mail address\n\n\n    const mailRegex = new RegExp(regexList.mailAddress);\n\n    if (!mailRegex.test(mailAddress)) {\n      validInput.validMail = false;\n    }\n\n    const recaptchaValue = recaptchaRef.current.getValue();\n\n    if (!(recaptchaValue.length > 0)) {\n      validInput.validCaptcha = false;\n    }\n\n    var validUser = true;\n\n    for (const [_, value] of Object.entries(validInput)) {\n      if (value !== true) {\n        validUser = false;\n      }\n    }\n\n    if (validUser) {\n      routing.push('./submit');\n    }\n\n    setValidInput(validInput);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    name: \"applicationForm\",\n    className: \"w-2/3 h-screen relative inset-x-center-section bg-athens-gray\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center w-2/3 h-full relative inset-x-center-section py-20 select-none\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-5xl font-extrabold text-prussian-blue\",\n        children: \"Application Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-areas-form-layout mt-16 pt-5 bg-athens-gray h-full w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-in-name\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-evenly\",\n            children: [/*#__PURE__*/_jsxDEV(NameField, {\n              name: \"First name\",\n              id: \"firstName\",\n              userValidInput: validInput.validFirstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(NameField, {\n              name: \"Last name\",\n              id: \"lastName\",\n              userValidInput: validInput.validLastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-in-address\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col justify-evenly\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center h-1/4 w-full px-5\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-3xl font-extrabold text-prussian-blue\",\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AddressField, {\n              name: \"Address Line 1\",\n              id: \"firstAddress\",\n              placeholder: \"Street name & number\",\n              mandatory: true,\n              userValidInput: validInput.validAddrLine1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AddressField, {\n              name: \"Address Line 2\",\n              id: \"secondAddress\",\n              placeholder: \"Suite, apartament\",\n              mandatory: false,\n              userValidInput: validInput.validAddrLine2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex w-full h-1/4 mt-10\",\n              children: [/*#__PURE__*/_jsxDEV(SubAddressField, {\n                name: \"City\",\n                id: \"city\",\n                userValidInput: validInput.validCity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SubAddressField, {\n                name: \"State\",\n                id: \"state\",\n                userValidInput: validInput.validState\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(SubAddressField, {\n                name: \"Zip code\",\n                id: \"zipCode\",\n                userValidInput: validInput.validZipCode\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full h-1/6 mt-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-in-contact bg-athens-gray\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col justify-center h-1/2 w-full px-5\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-extrabold text-prussian-blue\",\n              children: \"Contact information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex h-1/2 w-full\",\n            children: [/*#__PURE__*/_jsxDEV(ContactField, {\n              name: \"Phone number\",\n              id: \"phoneNumber\",\n              placeholder: \"555-5555\",\n              userValidInput: validInput.validPhone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ContactField, {\n              name: \"Email address\",\n              id: \"mailAddress\",\n              placeholder: \"john@doe.com\",\n              userValidInput: validInput.validMail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-in-submit\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center px-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col justify-center h-full w-1/2\",\n              children: [/*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n                sitekey: `${CAPTCHA_API_KEY}`,\n                ref: recaptchaRef,\n                theme: \"dark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), validInput.validCaptcha === false && /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"w-full h-1/3 mt-4 font-extrabold text-xl text-red italic\",\n                children: \"Please check the captcha\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 71\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"h-1/3 w-1/3 bg-school-bus-yellow border animation ease-in-out duration-500 transform hover:scale-110\",\n              onClick: () => {\n                validateUserInput();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-3xl font-bold text-prussian-blue\",\n                children: \"Join Us\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InfoForm, \"Gdc+87b+99X0Akgxk9wyDs8zuZw=\", false, function () {\n  return [useHistory];\n});\n\n_c = InfoForm;\nexport default InfoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoForm\");","map":{"version":3,"sources":["C:/React_Projects/ddroidd_internship/webapp/app/src/Form/InfoForm.jsx"],"names":["React","NameField","AddressField","ContactField","SubAddressField","ReCAPTCHA","useHistory","useState","regexList","inputIds","CAPTCHA_API_KEY","process","env","REACT_APP_CAPTCHA_API_KEY","recaptchaRef","createRef","InfoForm","routing","validInput","setValidInput","validFirstName","validLastName","validAddrLine1","validAddrLine2","validCity","validState","validZipCode","validPhone","validMail","validCaptcha","getUserInput","userInputs","firstName","lastName","firstAddress","secondAddress","city","state","zipCode","phoneNumber","mailAddress","map","currentInputField","document","getElementById","value","validateOnlyLettersInput","onlyLettersRegex","RegExp","onlyLetters","test","length","validateUserInput","addressRegex","address","console","log","zipCodeRegex","phoneRegex","mailRegex","recaptchaValue","current","getValue","validUser","_","Object","entries","push"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport NameField from './NameField';\r\nimport AddressField from './AddressField';\r\nimport ContactField from './ContactField';\r\nimport SubAddressField from './SubAddressField';\r\nimport ReCAPTCHA from \"react-google-recaptcha\"\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { regexList } from './constants';\r\nimport { inputIds } from './constants';\r\n\r\nconst CAPTCHA_API_KEY = process.env.REACT_APP_CAPTCHA_API_KEY;\r\nconst recaptchaRef = React.createRef();\r\n\r\nconst InfoForm = () => {\r\n\r\n    let routing = useHistory();\r\n\r\n    const [validInput , setValidInput] = useState({\r\n        validFirstName : null , \r\n        validLastName : null , \r\n        validAddrLine1 : null,\r\n        validAddrLine2 : null,\r\n        validCity : null,\r\n        validState : null,\r\n        validZipCode : null,\r\n        validPhone : null,\r\n        validMail : null,\r\n        validCaptcha : null\r\n    });\r\n\r\n    const getUserInput = () => {\r\n        var userInputs = {\r\n            firstName : \"\" , \r\n            lastName : \"\" , \r\n            firstAddress : \"\" , \r\n            secondAddress : \"\" ,\r\n            city : \"\" ,\r\n            state : \"\" ,\r\n            zipCode : \"\" ,\r\n            phoneNumber : \"\" ,\r\n            mailAddress : \"\" ,\r\n        };\r\n        inputIds.map((currentInputField) => {\r\n            userInputs[currentInputField] = document.getElementById(currentInputField).value;\r\n        });\r\n        return userInputs;\r\n    }    \r\n\r\n    const validateOnlyLettersInput = (firstName , lastName , city , secondAddress , validInput) => {\r\n        const onlyLettersRegex = new RegExp(regexList.onlyLetters);\r\n        if(!onlyLettersRegex.test(firstName)){\r\n            validInput.validFirstName = false;\r\n        }\r\n        if(!onlyLettersRegex.test(lastName)){\r\n            validInput.validLastName = false;\r\n        }\r\n        if(!onlyLettersRegex.test(city)){\r\n            validInput.validCity = false;\r\n        }\r\n        if(secondAddress.length > 0 && !onlyLettersRegex.test(secondAddress)){\r\n            validInput.validAddrLine2 = false;\r\n        }\r\n    }\r\n\r\n    const validateUserInput = () => {\r\n        const {firstName , lastName , firstAddress , secondAddress , city , state , zipCode , phoneNumber , mailAddress} = getUserInput();\r\n        var validInput = {\r\n            validFirstName : true ,\r\n            validLastName : true ,\r\n            validAddrLine1 : true ,\r\n            validAddrLine2 : true ,\r\n            validCity : true ,\r\n            validState : true ,\r\n            validZipCode : true ,\r\n            validPhone : true ,\r\n            validMail : true ,\r\n            validCaptcha : true\r\n        }\r\n        validateOnlyLettersInput(firstName , lastName , city , secondAddress , validInput);\r\n        //testing first address line\r\n        const addressRegex = new RegExp(regexList.address);\r\n        if(!addressRegex.test(firstAddress)){\r\n            validInput.validAddrLine1 = false;\r\n        }\r\n        //testing state\r\n        if(state === 'true'){\r\n            console.log(state);\r\n            validInput.validState = false;\r\n        }\r\n        //testing zip code\r\n        const zipCodeRegex = new RegExp(regexList.zipCode);\r\n        if(!zipCodeRegex.test(zipCode)){\r\n            validInput.validZipCode = false;\r\n        }\r\n        //testing phone number\r\n        const phoneRegex = new RegExp(regexList.phoneNumber);\r\n        if(!phoneRegex.test(phoneNumber)){\r\n            validInput.validPhone = false;\r\n        }\r\n        //testing mail address\r\n        const mailRegex = new RegExp(regexList.mailAddress);\r\n        if(!mailRegex.test(mailAddress)){\r\n            validInput.validMail = false;\r\n        }\r\n        const recaptchaValue = recaptchaRef.current.getValue();\r\n        if(!(recaptchaValue.length > 0)){\r\n            validInput.validCaptcha = false;\r\n        }\r\n        var validUser = true;\r\n        for(const [_ , value] of Object.entries(validInput)){\r\n            if(value !== true){\r\n                validUser = false;\r\n            }\r\n        }\r\n        if(validUser){\r\n            routing.push('./submit');\r\n        }\r\n        setValidInput(validInput);\r\n    }\r\n\r\n    return(\r\n        <form name = \"applicationForm\" className='w-2/3 h-screen relative inset-x-center-section bg-athens-gray'>\r\n            <div className='flex flex-col items-center w-2/3 h-full relative inset-x-center-section py-20 select-none'>\r\n                <h1 className='text-5xl font-extrabold text-prussian-blue'>Application Form</h1>\r\n                <div className='grid grid-areas-form-layout mt-16 pt-5 bg-athens-gray h-full w-full'>\r\n                    <div className='grid grid-in-name'>\r\n                        <div className='flex justify-evenly'>\r\n                            <NameField name = {\"First name\"} id = {\"firstName\"} userValidInput = {validInput.validFirstName}/>\r\n                            <NameField name = {\"Last name\"} id = {\"lastName\"} userValidInput = {validInput.validLastName}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-in-address'>\r\n                        <div className='flex flex-col justify-evenly'>\r\n                            <div className='flex items-center h-1/4 w-full px-5'>\r\n                                <h1 className='text-3xl font-extrabold text-prussian-blue'>Address</h1>\r\n                            </div>\r\n                            <AddressField name = {\"Address Line 1\"} id = {\"firstAddress\"} placeholder = {\"Street name & number\"} mandatory = {true} userValidInput = {validInput.validAddrLine1}/>\r\n                            <AddressField name = {\"Address Line 2\"} id = {\"secondAddress\"} placeholder = {\"Suite, apartament\"} mandatory = {false} userValidInput = {validInput.validAddrLine2}/>\r\n                            <div className='flex w-full h-1/4 mt-10'>\r\n                                <SubAddressField name = {\"City\"} id = {\"city\"} userValidInput = {validInput.validCity}/>\r\n                                <SubAddressField name = {\"State\"} id = {\"state\"} userValidInput = {validInput.validState}/>\r\n                                <SubAddressField name = {\"Zip code\"} id = {\"zipCode\"} userValidInput = {validInput.validZipCode}/>\r\n                            </div>\r\n                            <div className='w-full h-1/6 mt-5'></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-in-contact bg-athens-gray'>\r\n                        <div className='flex flex-col justify-center h-1/2 w-full px-5'>\r\n                            <h1 className='text-3xl font-extrabold text-prussian-blue'>Contact information</h1>\r\n                        </div>\r\n                        <div className='flex h-1/2 w-full'>\r\n                            <ContactField name = {\"Phone number\"} id = {\"phoneNumber\"} placeholder = {\"555-5555\"} userValidInput = {validInput.validPhone}/>\r\n                            <ContactField name = {\"Email address\"} id = {\"mailAddress\"} placeholder = {\"john@doe.com\"} userValidInput = {validInput.validMail}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='grid grid-in-submit'>\r\n                        <div className='flex justify-between items-center px-5'>\r\n                            <div className='flex flex-col justify-center h-full w-1/2'>\r\n                                <ReCAPTCHA \r\n                                    sitekey={`${CAPTCHA_API_KEY}`}\r\n                                    ref={recaptchaRef}\r\n                                    theme='dark'\r\n                                />\r\n                                {validInput.validCaptcha === false && <h1 className='w-full h-1/3 mt-4 font-extrabold text-xl text-red italic'>Please check the captcha</h1>}\r\n                            </div>\r\n                            <button className='h-1/3 w-1/3 bg-school-bus-yellow border animation ease-in-out duration-500 transform hover:scale-110' onClick = {() => {validateUserInput()}}>\r\n                                <h1 className='text-3xl font-bold text-prussian-blue'>Join Us</h1>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default InfoForm;"]},"metadata":{},"sourceType":"module"}