{"ast":null,"code":"var _jsxFileName = \"C:\\\\React_Projects\\\\ddroidd_internship\\\\webapp\\\\app\\\\src\\\\Form\\\\SubAddressField.jsx\";\nimport React from 'react';\nimport { states } from './constants';\nimport propTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst switchErrorMsg = subAddressType => {\n  if (subAddressType === \"City\") {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"w-full h-1/3 text-red text-xl italic font-extrabold pt-5 px-5\",\n      children: \"City name should contain only letters!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"w-full h-1/3 text-red text-xl italic font-extrabold pt-5 px-5\",\n      children: \"Please provide valid zip code!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n};\n\nconst SubAddressField = props => {\n  if (props.name === \"State\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-center h-full w-1/3 px-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `${props.id}`,\n        className: \"text-2xl text-black font-bold\",\n        children: [props.name, \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 105\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: `${props.id}`,\n        className: `h-1/2 px-3 text-xl font-bold shadow-xl rounded-sm ${props.userValidInput === true && 'border-4 border-green rounded-xl'}`,\n        placeholder: props.name,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          selected: true,\n          value: true,\n          children: \"Select state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), states.map((currentState, key) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            id: key,\n            value: currentState,\n            children: currentState\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), props.userValidInput === false && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"w-full h-1/3 text-red text-xl italic font-extrabold pt-5 px-5\",\n        children: \"Please select a state!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 52\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-center h-full w-1/3 px-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `${props.id}`,\n        className: \"text-2xl text-black font-bold\",\n        children: [props.name, \":\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 105\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `${props.id}`,\n        className: `h-1/2 px-3 text-xl font-bold shadow-input-shadow rounded-sm ${props.userValidInput === true && 'border-4 border-green rounded-xl'}`,\n        placeholder: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), props.userValidInput === false && switchErrorMsg(props.name)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = SubAddressField;\nSubAddressField.propTypes = {\n  name: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  userValidInput: propTypes.bool.isRequired\n};\nexport default SubAddressField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubAddressField\");","map":{"version":3,"sources":["C:/React_Projects/ddroidd_internship/webapp/app/src/Form/SubAddressField.jsx"],"names":["React","states","propTypes","switchErrorMsg","subAddressType","SubAddressField","props","name","id","userValidInput","map","currentState","key","string","isRequired","bool"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {states} from './constants';\r\nimport propTypes from 'prop-types';\r\n\r\nconst switchErrorMsg = (subAddressType) => {\r\n    if(subAddressType === \"City\"){\r\n        return (\r\n            <h1 className='w-full h-1/3 text-red text-xl italic font-extrabold pt-5 px-5'>City name should contain only letters!</h1>\r\n        );\r\n    }else{\r\n        return (\r\n            <h1 className='w-full h-1/3 text-red text-xl italic font-extrabold pt-5 px-5'>Please provide valid zip code!</h1>\r\n        );\r\n    }\r\n}\r\n\r\nconst SubAddressField = (props) => {\r\n    if(props.name === \"State\"){\r\n        return(\r\n            <div className='flex flex-col justify-center h-full w-1/3 px-5'>\r\n                <label htmlFor = {`${props.id}`} className='text-2xl text-black font-bold'>{props.name}:<span className='text-red'>*</span></label>\r\n                <select id = {`${props.id}`} className= {`h-1/2 px-3 text-xl font-bold shadow-xl rounded-sm ${props.userValidInput === true && 'border-4 border-green rounded-xl'}`} placeholder={props.name}>\r\n                    <option disabled selected value>Select state</option>\r\n                    {states.map((currentState , key) => {\r\n                        return(\r\n                            <option id = {key} value = {currentState}>{currentState}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n                {props.userValidInput === false && <h1 className='w-full h-1/3 text-red text-xl italic font-extrabold pt-5 px-5'>Please select a state!</h1>}\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div className='flex flex-col justify-center h-full w-1/3 px-5'>\r\n                <label htmlFor = {`${props.id}`} className='text-2xl text-black font-bold'>{props.name}:<span className='text-red'>*</span></label>\r\n                <input id = {`${props.id}`} className= {`h-1/2 px-3 text-xl font-bold shadow-input-shadow rounded-sm ${props.userValidInput === true && 'border-4 border-green rounded-xl'}`} placeholder={props.name}></input>\r\n                {props.userValidInput === false && switchErrorMsg(props.name)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSubAddressField.propTypes = {\r\n    name : propTypes.string.isRequired ,\r\n    id : propTypes.string.isRequired , \r\n    userValidInput : propTypes.bool.isRequired\r\n}\r\n\r\nexport default SubAddressField;"]},"metadata":{},"sourceType":"module"}