[{"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\index.js":"1","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\App.js":"2","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\NavBar\\NavBar.jsx":"3","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Landing\\Landing.jsx":"4","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Landing\\InfoLanding.jsx":"5","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Footer\\Footer.jsx":"6","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Submit\\Submit.jsx":"7","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Submit\\InfoSubmit.jsx":"8","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\Form.jsx":"9","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\InfoForm.jsx":"10","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\NameField.jsx":"11","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\AddressField.jsx":"12","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\ContactField.jsx":"13","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\SubAddressField.jsx":"14","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\constants.js":"15","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\userValidation.js":"16"},{"size":218,"mtime":1640133448318,"results":"17","hashOfConfig":"18"},{"size":508,"mtime":1640181187486,"results":"19","hashOfConfig":"18"},{"size":2462,"mtime":1640292349130,"results":"20","hashOfConfig":"18"},{"size":560,"mtime":1640265204150,"results":"21","hashOfConfig":"18"},{"size":2069,"mtime":1640283473308,"results":"22","hashOfConfig":"18"},{"size":709,"mtime":1640283504036,"results":"23","hashOfConfig":"18"},{"size":598,"mtime":1640265217990,"results":"24","hashOfConfig":"18"},{"size":677,"mtime":1640283393156,"results":"25","hashOfConfig":"18"},{"size":581,"mtime":1640298875027,"results":"26","hashOfConfig":"18"},{"size":8049,"mtime":1640299523803,"results":"27","hashOfConfig":"18"},{"size":1256,"mtime":1640299782456,"results":"28","hashOfConfig":"18"},{"size":1439,"mtime":1640299762891,"results":"29","hashOfConfig":"18"},{"size":1935,"mtime":1640299040618,"results":"30","hashOfConfig":"18"},{"size":3416,"mtime":1640299805831,"results":"31","hashOfConfig":"18"},{"size":2295,"mtime":1640268164574,"results":"32","hashOfConfig":"18"},{"size":3268,"mtime":1640267541010,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"taouo8",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\index.js",[],["71","72"],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\App.js",[],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\NavBar\\NavBar.jsx",["73"],"//Component that displays at the top of every page in the application\r\n//Contains the ddroidd logo , text that sugests the main theme of the application and a register button(opt) \r\n\r\nimport React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst DdroiddLogo = process.env.REACT_APP_DDROIDD_LOGO;\r\n\r\nconst NavBar = (props) =>{\r\n\r\n    let routing = useHistory();\r\n\r\n    return(\r\n        <div className='w-screen h-screen-10% bg-prussian-blue flex justify-evenly items-center'>\r\n            <img src = {`${DdroiddLogo}`}\r\n                className={`w-1/3 h-full screen-phones:h-1/3 screen-tablets:h-2/3 pr-48 screen-phones:pr-0 screen-tablets:pr-12 screen-s:pr-24 \r\n                ${props.clickableLogo && 'cursor-pointer'}`}\r\n                onClick = {() => {routing.push('./')}} />\r\n            <div className='w-1/3 h-full bg-athens-black flex items-center justify-center select-none'>\r\n                <h1 className='text-7xl screen-phones:text-nav-title-phones screen-tablets:text-nav-title-tablets \r\n                               screen-s:text-4xl screen-m:text-5xl screen-l:text-6xl screen-xl:text-7xl screen-2xl:text-9xl \r\n                             text-white font-semibold tracking-wide'>\r\n                  Winter Internship\r\n                </h1>\r\n            </div>\r\n            <div className='w-1/3 h-full flex justify-center items-center pl-48 screen-phones:pl-0 screen-tablets:pl-12 screen-s:pl-24'>\r\n                {props.displayButton && \r\n                <button \r\n                    className='w-1/4 h-1/3 bg-school-bus-yellow text-xl font-bold text-center border-solid border-2 border-dove-gray \r\n                    shadow-lg animation ease-in-out duration-500 transform hover:scale-110' \r\n                    onClick={() => {routing.push('./form')}}>\r\n                        <h1 className='text-2xl screen-phones:text-nav-button-phones screen-tablets:text-nav-button-tablets \r\n                                       screen-s:text-xs screen-m:text-sm screen-l:text-xl screen-xl:text-3xl screen-2xl:text-4xl \r\n                                       tracking-wide text-prussian-blue'>\r\n                            Join Us\r\n                        </h1>\r\n                </button>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nNavBar.propTypes = {\r\n    clickableLogo : propTypes.bool.isRequired ,\r\n    displayButton : propTypes.bool.isRequired\r\n}\r\n\r\nexport default NavBar;","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Landing\\Landing.jsx",[],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Landing\\InfoLanding.jsx",["74","75"],"//Component that is displayed in the center of the Landing page\r\n//It contains an images section and a register button\r\n\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst DestructuringImage = process.env.REACT_APP_DESTRUCTURING;\r\nconst WebpageLogo = process.env.REACT_APP_WEBPAGE_LOGO;\r\n\r\nconst InfoLanding = () => {\r\n\r\n    let routing = useHistory();\r\n\r\n    return(\r\n        <div className='relative inset-x-center-section h-screen-80% w-2/3 bg-athens-gray grid grid-areas-landing-layout-info'>\r\n            <div className='grid grid-in-top-section'/>\r\n            <div className='grid grid-in-middle-section'>\r\n                <div className='flex justify-between items-center ml-10'>\r\n                    <img src={`${DestructuringImage}`}\r\n                        className='w-2/3 h-1/2' /> \r\n                    <img src={`${WebpageLogo}`}\r\n                        className='w-1/3 h-1/2' />\r\n                </div>\r\n            </div>\r\n            <div className='grid grid-in-bottom-section'>\r\n                <div className='flex justify-center'>\r\n                    <button \r\n                        className='text-2xl w-1/4 h-1/3 screen-phones:h-1/5 screen-tablets:h-1/4 \r\n                                   font-bold text-center bg-school-bus-yellow -mt-5 border-solid border-2 border-dove-gray \r\n                                   shadow-button-shadow animation ease-in-out duration-500 transform hover:scale-110' \r\n                        onClick = {() => {routing.push('./form')}}>\r\n                            <h1 className='text-2xl screen-phones:text-info-section-button screen-tablets:text-xs \r\n                                           screen-s:text-sm screen-m:text-base screen-3xl:text-3xl screen-2xl:text-4xl \r\n                                           text-prussian-blue font-bold tracking-wide'>\r\n                                    Join Us\r\n                            </h1>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoLanding;","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Footer\\Footer.jsx",[],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Submit\\Submit.jsx",[],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Submit\\InfoSubmit.jsx",[],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\Form.jsx",[],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\InfoForm.jsx",["76"],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\NameField.jsx",[],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\AddressField.jsx",[],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\ContactField.jsx",[],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\SubAddressField.jsx",["77","78"],"C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\constants.js",["79","80","81","82","83"],"//List of all the states in Romania , ordered alphabetically\r\nexport const states = ['Alba' , 'Arad' , 'Argeș' , 'Bacău' , 'Bihor' , 'Bistrița-Năsăud' , 'Botoșani' , 'Brăila' , 'Brașov' , 'București' ,  'Buzău' , 'Călărași' ,\r\n                 'Caraș-Severin' , 'Cluj' , 'Constanța' , 'Covasna' , 'Dâmbovița' , 'Dolj' , 'Galați' , 'Giurgiu' , 'Gorj' , 'Harghita' , 'Hunedoara' ,\r\n                 'Ialomița' , 'Iași' , 'Ilfov' , 'Maramureș' , 'Mehedinți' , 'Mureș' , 'Neamț' , 'Olt' , 'Prahova' , 'Sălaj' , 'Satu Mare' , 'Sibiu' ,\r\n                 'Suceava' , 'Teleorman' , 'Timiș' , 'Tulcea' , 'Vâlcea' , 'Vaslui' , 'Vrancea'];\r\n\r\n//List of all regexes used for user input validation\r\nexport const regexList = {\r\n    //regex that matches letters , diacritics and whitespaces\r\n    onlyLetters : \"^[a-zA-ZÀ-ž- ]+$\" ,\r\n    //regex that matches letters , digits and whitespaces (min 1 of each)\r\n    address : \"^(?:[0-9 ]+[a-zA-ZÀ-ž ]|[a-zA-ZÀ-ž ]+[0-9 ])[a-zA-ZÀ-ž0-9 ]*$\" ,\r\n    //regex that matches a sequence of exact 6 digits\r\n    zipCode : \"^[0-9]{6}$\" ,\r\n    //regex that matches a valid phone number\r\n    phoneNumber : \"^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$\" ,\r\n    //regex that matches a valid mail address (only (A-Za-z0-9_!#$%&'*+/=?`{|}~^.-) before the @ and only (A-Za-z.-) after that)\r\n    mailAddress : \"^[A-Za-z0-9_!#$%&'*+/=?`{|}~^.-]+@[A-Za-z.-]+$\"\r\n}\r\n\r\n//List of all ids for the input fields\r\nexport const inputIds = [\"firstName\" , \"lastName\" , \"firstAddress\" , \"secondAddress\" , \"city\" , \"state\" , \"zipCode\" , \"phoneNumber\" , \"mailAddress\"];\r\n\r\n/**\r\n * Returns a validation state object based on a state \r\n * @param {Boolean | null} initialState The value for every key in the object\r\n * @returns {Object}                    Initialized state object\r\n */\r\nexport const getStateObject = (initialState) => {\r\n    return {\r\n        validFirstName : initialState ,\r\n        validLastName : initialState ,\r\n        validAddrLine1 : initialState ,\r\n        validAddrLine2 : initialState ,\r\n        validCity : initialState ,\r\n        validState : initialState ,\r\n        validZipCode : initialState ,\r\n        validPhone : initialState ,\r\n        validMail : initialState ,\r\n        validCaptcha : initialState ,\r\n    }\r\n}\r\n\r\n\r\n","C:\\React_Projects\\ddroidd_internship\\webapp\\app\\src\\Form\\userValidation.js",["84"],"//File where we store functions that take part in user validation process\r\n\r\nimport { regexList } from './constants';\r\nimport { inputIds } from './constants';\r\n\r\n/**\r\n * Collects user input from registration form\r\n * @returns {Object}  User data object (key - input field , value - user input)\r\n */\r\nexport const getUserInput = () => {\r\n    var userInputs = {\r\n        firstName : \"\" , \r\n        lastName : \"\" , \r\n        firstAddress : \"\" , \r\n        secondAddress : \"\" ,\r\n        city : \"\" ,\r\n        state : \"\" ,\r\n        zipCode : \"\" ,\r\n        phoneNumber : \"\" ,\r\n        mailAddress : \"\" ,\r\n    };\r\n    inputIds.map((currentInputField , _) => {\r\n        userInputs[currentInputField] = document.getElementById(currentInputField).value;\r\n    });\r\n    return userInputs;\r\n}    \r\n\r\n/**\r\n * Validates the name section of the form\r\n * @param {String} firstName User input for the First Name field\r\n * @param {String} lastName  User input for the Last Name field\r\n * @param {Object} validInput Object in which we store the name validation status based on regex check\r\n */\r\nexport const validateName = (firstName , lastName , validInput) => {\r\n    const onlyLettersRegex = new RegExp(regexList.onlyLetters);\r\n    if(!onlyLettersRegex.test(firstName)){\r\n        validInput.validFirstName = false;\r\n    }\r\n    if(!onlyLettersRegex.test(lastName)){\r\n        validInput.validLastName = false;\r\n    }\r\n}\r\n\r\n/**\r\n * Validates the address section of the form\r\n * @param {String} addressLine1 User input for the Address Line 1 field\r\n * @param {String} addressLine2 User input for the Address Line 2 field\r\n * @param {String} city User input for the City field\r\n * @param {String | true} state User input for the State field\r\n * @param {String} zipCode User input for the Zip code field\r\n * @param {Object} validInput Object in which we store the address validation status based on regex check\r\n */\r\nexport const validateAddress = (addressLine1 , addressLine2 , city , state , zipCode , validInput) => {\r\n    const onlyLettersRegex = new RegExp(regexList.onlyLetters);\r\n    const zipCodeRegex = new RegExp(regexList.zipCode);\r\n    const addressRegex = new RegExp(regexList.address);\r\n    if(!addressRegex.test(addressLine1)){\r\n        validInput.validAddrLine1 = false;\r\n    }\r\n    if(addressLine2.length > 0 && !addressRegex.test(addressLine2)){\r\n        validInput.validAddrLine2 = false;\r\n    }\r\n    if(!onlyLettersRegex.test(city)){\r\n        validInput.validCity = false;\r\n    }\r\n    if(state === 'true'){\r\n        validInput.validState = false;\r\n    }\r\n    if(!zipCodeRegex.test(zipCode)){\r\n        validInput.validZipCode = false;\r\n    }\r\n}\r\n\r\n/**\r\n * Validates the contact section of the form\r\n * @param {String} phone User input for the Phone number field\r\n * @param {String} mail User input for the Email address\r\n * @param {Object} validInput Object in which we store the contact validation status based on regex check\r\n */\r\nexport const validateContact = (phone , mail , validInput) => {\r\n    const phoneRegex = new RegExp(regexList.phoneNumber);\r\n    const mailRegex = new RegExp(regexList.mailAddress);\r\n    if(!phoneRegex.test(phone)){\r\n        validInput.validPhone = false;\r\n    }\r\n    if(!mailRegex.test(mail)){\r\n        validInput.validMail = false;\r\n    }\r\n}",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":16,"column":13,"nodeType":"91","endLine":19,"endColumn":58},{"ruleId":"89","severity":1,"message":"90","line":19,"column":21,"nodeType":"91","endLine":20,"endColumn":51},{"ruleId":"89","severity":1,"message":"90","line":21,"column":21,"nodeType":"91","endLine":22,"endColumn":51},{"ruleId":"92","severity":1,"message":"93","line":45,"column":20,"nodeType":"94","messageId":"95","endLine":45,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":26,"column":5,"nodeType":"98","messageId":"99","endLine":26,"endColumn":83},{"ruleId":"96","severity":1,"message":"97","line":28,"column":5,"nodeType":"98","messageId":"99","endLine":28,"endColumn":29},{"ruleId":"100","severity":1,"message":"101","line":16,"column":22,"nodeType":"102","messageId":"103","endLine":16,"endColumn":23,"suggestions":"104"},{"ruleId":"100","severity":1,"message":"105","line":16,"column":44,"nodeType":"102","messageId":"103","endLine":16,"endColumn":45,"suggestions":"106"},{"ruleId":"100","severity":1,"message":"107","line":16,"column":46,"nodeType":"102","messageId":"103","endLine":16,"endColumn":47,"suggestions":"108"},{"ruleId":"100","severity":1,"message":"105","line":16,"column":60,"nodeType":"102","messageId":"103","endLine":16,"endColumn":61,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"107","line":16,"column":62,"nodeType":"102","messageId":"103","endLine":16,"endColumn":63,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":22,"column":42,"nodeType":"113","messageId":"114","endLine":22,"endColumn":44},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["117","118"],"Unnecessary escape character: \\s.",["119","120"],"Unnecessary escape character: \\..",["121","122"],["123","124"],["125","126"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"messageId":"127","fix":"128","desc":"129"},{"messageId":"130","fix":"131","desc":"132"},{"messageId":"127","fix":"133","desc":"129"},{"messageId":"130","fix":"134","desc":"132"},{"messageId":"127","fix":"135","desc":"129"},{"messageId":"130","fix":"136","desc":"132"},{"messageId":"127","fix":"137","desc":"129"},{"messageId":"130","fix":"138","desc":"132"},{"messageId":"127","fix":"139","desc":"129"},{"messageId":"130","fix":"140","desc":"132"},"removeEscape",{"range":"141","text":"142"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"143","text":"144"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"145","text":"142"},{"range":"146","text":"144"},{"range":"147","text":"142"},{"range":"148","text":"144"},{"range":"149","text":"142"},{"range":"150","text":"144"},{"range":"151","text":"142"},{"range":"152","text":"144"},[1127,1128],"",[1127,1127],"\\",[1149,1150],[1149,1149],[1151,1152],[1151,1151],[1165,1166],[1165,1165],[1167,1168],[1167,1167]]